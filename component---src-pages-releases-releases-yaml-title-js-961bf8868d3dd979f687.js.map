{"version":3,"file":"component---src-pages-releases-releases-yaml-title-js-961bf8868d3dd979f687.js","mappings":"qOAsCA,UAzBa,IAAa,IAAZ,KAACA,GAAK,EAClB,MAAMC,EAAcD,EAAKE,aAKnBC,EAJaH,EAAKI,QAAQC,MAIHC,MAC3BC,GAAOA,EAAIC,eAAiBP,EAAYQ,QAK1C,OAHAR,EAAYS,OAAQC,EAAAA,EAAAA,GAASR,GAI3B,gBAAC,IAAM,CAACS,UAAWZ,EAAKa,KAAKC,aAAaC,OACxC,gBAAC,IAAO,CACNC,IAAKf,EAAYgB,GACjBC,WAAYjB,EAAYS,MACxBK,MAAOd,EAAYc,MACnBI,OAAQlB,EAAYkB,OACpBC,YAAanB,EAAYmB,cAEpB,C","sources":["webpack://cartoon-beats-reality-lean-static-gatsby-site/./src/pages/releases/{releasesYaml.title}.js"],"sourcesContent":["import * as React from \"react\"\n\n\nimport { graphql } from 'gatsby';\nimport { getImage } from \"gatsby-plugin-image\"\n\nimport Layout from \"../../components/layout\"\nimport { Release } from \"../../components/releases\"\n\n// import \"../fonts.scss\"\n// import \"../index.scss\"\nimport \"../../fontello/css/fontawesome-musicstores.css\"\n\nconst Page = ({data}) => {\n  const releaseInfo = data.releasesYaml;\n  const imageFiles = data.allFile.nodes;\n\n  // Find the cover image and convert to a Gatsby image.\n  // Might want to move this to a utility module (pasted from index page).\n  const imageNode = imageFiles.find(\n    img => img.relativePath === releaseInfo.cover\n  );\n  releaseInfo.image = getImage(imageNode);\n\n\n  return (\n    <Layout siteTitle={data.site.siteMetadata.title}>\n      <Release\n        key={releaseInfo.id}\n        coverImage={releaseInfo.image} \n        title={releaseInfo.title}\n        artist={releaseInfo.artist}\n        listenLinks={releaseInfo.listenLinks}\n      />\n    </Layout>\n  )\n}\n\nexport default Page;\n\nexport const query = graphql`query($id: String) {\n  site {\n    siteMetadata {\n      title\n    }\n  }\n  releasesYaml(id: { eq: $id }) {\n    id\n    catalogueNumber\n    artist\n    title\n    cover\n    releaseDate\n    listenLinks {\n      bandcamp\n      apple\n      youtube\n      spotify\n      amazon\n      beatport\n      soundcloud\n    }      \n  }\n  # We query ALL images, and then filter to this release's image in component above. \n  # This might be wasteful?\n  allFile(filter: {sourceInstanceName: {eq: \"images\"}}) {\n    nodes {\n      relativePath\n      childImageSharp {\n        gatsbyImageData(width: 600, placeholder: BLURRED)\n      }\n    }\n  }\n}`;"],"names":["data","releaseInfo","releasesYaml","imageNode","allFile","nodes","find","img","relativePath","cover","image","getImage","siteTitle","site","siteMetadata","title","key","id","coverImage","artist","listenLinks"],"sourceRoot":""}